// DO NOT EDIT. This file was generated by "github.com/frk/isvalid".

package testdata

import (
	"errors"
	"time"

	"github.com/frk/isvalid"
)

func (v ContextOption3Validator) Validate() error {
	if v.Context == "create" {
		if v.F1 == nil || *v.F1 == 0 {
			return errors.New("F1 is required")
		}
		if v.F2 == nil || len(*v.F2) == 0 {
			return errors.New("F2 is required")
		}
	}
	if v.Context == "foo_bar" {
		if v.F1 != nil && *v.F1 >= 10000 {
			return errors.New("F1 must be less than: 10000")
		}
	}
	if v.F1 != nil && *v.F1 != time.Nanosecond && *v.F1 != time.Microsecond && *v.F1 != time.Millisecond && *v.F1 != time.Second && *v.F1 != time.Minute && *v.F1 != time.Hour {
		return errors.New("F1 is not valid")
	}
	if v.F2 != nil {
		for _, e := range *v.F2 {
			if v.Context == "create" {
				if !isvalid.Email(e) {
					return errors.New("F2 must be a valid email address")
				}
			}
			if v.Context == "update" {
				if len(e) > 128 {
					return errors.New("F2 must be of length at most: 128")
				}
			}
		}
	}
	return nil
}
