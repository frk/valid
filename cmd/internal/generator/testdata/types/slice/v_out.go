// Code generated by "github.com/frk/valid". DO NOT EDIT.

package testdata

import (
	"errors"

	"github.com/frk/valid"
)

func (v *Validator) Validate() error {
	if len(v.F1) > 12 {
		return errors.New("F1 must be of length at most: 12")
	}
	for _, e := range v.F2 {
		if !valid.Email(e) {
			return errors.New("F2 must be a valid email address")
		}
	}
	for _, e := range v.F3 {
		if !valid.Alnum(e, "en") {
			return errors.New("F3 must be an alphanumeric string")
		} else if len(e) < 11 || len(e) > 256 {
			return errors.New("F3 must be of length between: 11 and 256 (inclusive)")
		}
	}
	for _, e := range v.F4 {
		if e == nil {
			return errors.New("F4 cannot be nil")
		} else if !valid.Alnum(*e, "en") {
			return errors.New("F4 must be an alphanumeric string")
		}
	}
	if len(v.F5) == 0 {
		return errors.New("F5 is required")
	} else {
		for _, e := range v.F5 {
			if !valid.Email(e) {
				return errors.New("F5 must be a valid email address")
			}
		}
	}
	if len(v.F6) < 7 {
		return errors.New("F6 must be of length at least: 7")
	} else {
		for _, e := range v.F6 {
			if !valid.Email(e) {
				return errors.New("F6 must be a valid email address")
			}
		}
	}
	if v.F7 != nil && *v.F7 != nil && **v.F7 != nil {
		for _, e := range ***v.F7 {
			if !valid.Email(e) {
				return errors.New("F7 must be a valid email address")
			}
		}
	}
	if v.F8 != nil {
		for _, e := range *v.F8 {
			if e == nil || *e == "" {
				return errors.New("F8 is required")
			} else if !valid.Email(*e) {
				return errors.New("F8 must be a valid email address")
			}
		}
	}
	return nil
}
