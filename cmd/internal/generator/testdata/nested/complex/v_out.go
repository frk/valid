// DO NOT EDIT. This file was generated by "github.com/frk/valid".

package testdata

import (
	"errors"
	"strings"

	"github.com/frk/valid"
)

func (v Validator) Validate() error {
	if !valid.Email(v.G1.F4) {
		return errors.New("G1.F4 must be a valid email address")
	}
	if !valid.Email(v.G1.GA.F4) {
		return errors.New("G1.GA.F4 must be a valid email address")
	}
	if !valid.Hex(v.G1.GA.F5) {
		return errors.New("G1.GA.F5 must be a valid hexadecimal string")
	} else if len(v.G1.GA.F5) < 8 || len(v.G1.GA.F5) > 128 {
		return errors.New("G1.GA.F5 must be of length between: 8 and 128 (inclusive)")
	}
	if !valid.Email(v.G1.GA.GB.F4a) {
		return errors.New("G1.GA.GB.F4a must be a valid email address")
	}
	if !strings.HasPrefix(v.G1.GA.GB.GC.F6, "foo") {
		return errors.New("G1.GA.GB.GC.F6 must be prefixed with: \"foo\"")
	} else if !strings.Contains(v.G1.GA.GB.GC.F6, "bar") {
		return errors.New("G1.GA.GB.GC.F6 must contain substring: \"bar\"")
	} else if !strings.HasSuffix(v.G1.GA.GB.GC.F6, "baz") && !strings.HasSuffix(v.G1.GA.GB.GC.F6, "quux") {
		return errors.New("G1.GA.GB.GC.F6 must be suffixed with: \"baz\" or \"quux\"")
	} else if len(v.G1.GA.GB.GC.F6) < 8 || len(v.G1.GA.GB.GC.F6) > 64 {
		return errors.New("G1.GA.GB.GC.F6 must be of length between: 8 and 64 (inclusive)")
	}
	if !valid.Email(v.G1.GA.GB.F4b) {
		return errors.New("G1.GA.GB.F4b must be a valid email address")
	}
	if !valid.Hex(v.G1.GA.GB.F5) {
		return errors.New("G1.GA.GB.F5 must be a valid hexadecimal string")
	} else if len(v.G1.GA.GB.F5) < 8 || len(v.G1.GA.GB.F5) > 128 {
		return errors.New("G1.GA.GB.F5 must be of length between: 8 and 128 (inclusive)")
	}
	if !strings.HasPrefix(v.G1.F6, "foo") {
		return errors.New("G1.F6 must be prefixed with: \"foo\"")
	} else if !strings.Contains(v.G1.F6, "bar") {
		return errors.New("G1.F6 must contain substring: \"bar\"")
	} else if !strings.HasSuffix(v.G1.F6, "baz") && !strings.HasSuffix(v.G1.F6, "quux") {
		return errors.New("G1.F6 must be suffixed with: \"baz\" or \"quux\"")
	} else if len(v.G1.F6) < 8 || len(v.G1.F6) > 64 {
		return errors.New("G1.F6 must be of length between: 8 and 64 (inclusive)")
	}
	return nil
}
