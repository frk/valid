// DO NOT EDIT. This file was generated by "github.com/frk/valid".

package testdata

import (
	"github.com/frk/valid/cmd/internal/generator/testdata/mypkg"
)

func (v T14Validator) Validate() error {
	if v.F1 != myenum0 && v.F1 != myenum1 && v.F1 != myenum2 && v.F1 != myenum4 && v.F1 != myenum6 {
		v.ea.Error("F1", v.F1, "enum", myenum0, myenum1, myenum2, myenum4, myenum6)
	}
	if v.F2 != mypkg.MyFoo && v.F2 != mypkg.MyBar && v.F2 != mypkg.MyBaz {
		v.ea.Error("F2", v.F2, "enum", mypkg.MyFoo, mypkg.MyBar, mypkg.MyBaz)
	}
	if v.F3 == nil || *v.F3 == nil || **v.F3 == "" {
		v.ea.Error("F3", v.F3, "required")
	} else {
		f := **v.F3
		if len(f) != 3 {
			v.ea.Error("F3", f, "len", 3)
		} else if f != gibfoo && f != gibbar && f != gibbaz && f != gibquux {
			v.ea.Error("F3", f, "enum", gibfoo, gibbar, gibbaz, gibquux)
		}
	}
	if v.F4 != nil && (*v.F4 != mypkg.MyEnumFoo && *v.F4 != mypkg.MyEnumBar && *v.F4 != mypkg.MyEnumBaz) {
		v.ea.Error("F4", v.F4, "enum", mypkg.MyEnumFoo, mypkg.MyEnumBar, mypkg.MyEnumBaz)
	}
	return v.ea.Out()
}
