// DO NOT EDIT. This file was generated by "github.com/frk/valid".

package testdata

import (
	"errors"
	"fmt"
	"strings"

	"github.com/frk/valid"
)

func (v T46aValidator) Validate() error {
	if len(v.F1) > v.Max {
		return fmt.Errorf("F1 must be of length at most: %v", v.Max)
	}
	if v.F2 != nil && (*v.F2 < v.Min || *v.F2 > v.Max) {
		return fmt.Errorf("F2 must be between: %v and %v", v.Min, v.Max)
	}
	if !valid.Phone(v.F3, v.SomeValue) {
		return errors.New("F3 must be a valid phone number")
	}
	if !strings.Contains(v.F4, v.SomeValue) && !strings.Contains(v.F4, "bar") && !strings.Contains(v.F4, "baz") {
		return fmt.Errorf("F4 must contain substring: %v or \"bar\" or \"baz\"", v.SomeValue)
	}
	return nil
}

func (v T46bValidator) Validate() error {
	if len(v.F1) > v.Max {
		return v.ec.Error("F1", v.F1, "len", "", v.Max)
	}
	if v.F2 != nil && (*v.F2 < v.Min || *v.F2 > v.Max) {
		return v.ec.Error("F2", *v.F2, "rng", v.Min, v.Max)
	}
	if !valid.Phone(v.F3, v.SomeValue) {
		return v.ec.Error("F3", v.F3, "phone", v.SomeValue)
	}
	if !strings.Contains(v.F4, "foo") && !strings.Contains(v.F4, "bar") && !strings.Contains(v.F4, v.SomeValue) {
		return v.ec.Error("F4", v.F4, "contains", "foo", "bar", v.SomeValue)
	}
	return nil
}

func (v T46cValidator) Validate() error {
	if len(v.F1) > v.Max {
		v.ea.Error("F1", v.F1, "len", "", v.Max)
	}
	if v.F2 != nil && (*v.F2 < v.Min || *v.F2 > v.Max) {
		v.ea.Error("F2", *v.F2, "rng", v.Min, v.Max)
	}
	if !valid.Phone(v.F3, v.SomeValue) {
		v.ea.Error("F3", v.F3, "phone", v.SomeValue)
	}
	if !strings.Contains(v.F4, "foo") && !strings.Contains(v.F4, v.SomeValue) && !strings.Contains(v.F4, "baz") {
		v.ea.Error("F4", v.F4, "contains", "foo", v.SomeValue, "baz")
	}
	return v.ea.Out()
}
